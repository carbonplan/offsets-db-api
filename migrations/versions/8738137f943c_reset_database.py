"""reset database

Revision ID: 8738137f943c
Revises:
Create Date: 2024-11-21 16:40:14.822948

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8738137f943c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute('CREATE EXTENSION IF NOT EXISTS pg_trgm')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'clip',
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('is_waybacked', sa.Boolean(), nullable=True),
        sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_clip_id'), 'clip', ['id'], unique=False)
    op.create_table(
        'file',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('content_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            'status', sa.Enum('pending', 'success', 'failure', name='filestatus'), nullable=False
        ),
        sa.Column('error', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('recorded_at', sa.DateTime(), nullable=False),
        sa.Column(
            'category',
            sa.Enum('projects', 'credits', 'clips', 'projecttypes', 'unknown', name='filecategory'),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_file_id'), 'file', ['id'], unique=False)
    op.create_table(
        'project',
        sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('registry', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('proponent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('protocol', postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column('category', postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('listed_at', sa.Date(), nullable=True),
        sa.Column('is_compliance', sa.Boolean(), nullable=True),
        sa.Column('retired', sa.BigInteger(), nullable=True),
        sa.Column('issued', sa.BigInteger(), nullable=True),
        sa.Column('first_issuance_at', sa.Date(), nullable=True),
        sa.Column('first_retirement_at', sa.Date(), nullable=True),
        sa.Column('project_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint('project_id'),
    )
    op.create_index(
        'ix_project_name_gin',
        'project',
        [sa.text('lower(name) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index(op.f('ix_project_project_id'), 'project', ['project_id'], unique=True)
    op.create_index(
        'ix_project_project_id_gin',
        'project',
        [sa.text('lower(project_id) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_table(
        'clipproject',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('clip_id', sa.Integer(), nullable=False),
        sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ['clip_id'],
            ['clip.id'],
        ),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['project.project_id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_clipproject_clip_id'), 'clipproject', ['clip_id'], unique=False)
    op.create_index(op.f('ix_clipproject_id'), 'clipproject', ['id'], unique=False)
    op.create_index(op.f('ix_clipproject_project_id'), 'clipproject', ['project_id'], unique=False)
    op.create_table(
        'credit',
        sa.Column('quantity', sa.BigInteger(), nullable=True),
        sa.Column('vintage', sa.Integer(), nullable=True),
        sa.Column('transaction_date', sa.Date(), nullable=True),
        sa.Column('transaction_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('retirement_account', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('retirement_beneficiary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('retirement_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('retirement_note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['project.project_id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_credit_project_id'), 'credit', ['project_id'], unique=False)
    op.create_index(
        'ix_credit_retirement_account_gin',
        'credit',
        [sa.text('lower(retirement_account) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index(
        'ix_credit_retirement_beneficiary_gin',
        'credit',
        [sa.text('lower(retirement_beneficiary) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index(
        'ix_credit_retirement_note_gin',
        'credit',
        [sa.text('lower(retirement_note) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index(
        'ix_credit_retirement_reason_gin',
        'credit',
        [sa.text('lower(retirement_reason) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_index(
        op.f('ix_credit_transaction_date'), 'credit', ['transaction_date'], unique=False
    )
    op.create_index(
        'ix_credit_transaction_type_gin',
        'credit',
        [sa.text('lower(transaction_type) gin_trgm_ops')],
        unique=False,
        postgresql_using='gin',
    )
    op.create_table(
        'projecttype',
        sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('project_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ['project_id'],
            ['project.project_id'],
        ),
        sa.PrimaryKeyConstraint('project_id'),
    )
    op.create_index(op.f('ix_projecttype_project_id'), 'projecttype', ['project_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_projecttype_project_id'), table_name='projecttype')
    op.drop_table('projecttype')
    op.drop_index('ix_credit_transaction_type_gin', table_name='credit', postgresql_using='gin')
    op.drop_index(op.f('ix_credit_transaction_date'), table_name='credit')
    op.drop_index('ix_credit_retirement_reason_gin', table_name='credit', postgresql_using='gin')
    op.drop_index('ix_credit_retirement_note_gin', table_name='credit', postgresql_using='gin')
    op.drop_index(
        'ix_credit_retirement_beneficiary_gin', table_name='credit', postgresql_using='gin'
    )
    op.drop_index('ix_credit_retirement_account_gin', table_name='credit', postgresql_using='gin')
    op.drop_index(op.f('ix_credit_project_id'), table_name='credit')
    op.drop_table('credit')
    op.drop_index(op.f('ix_clipproject_project_id'), table_name='clipproject')
    op.drop_index(op.f('ix_clipproject_id'), table_name='clipproject')
    op.drop_index(op.f('ix_clipproject_clip_id'), table_name='clipproject')
    op.drop_table('clipproject')
    op.drop_index('ix_project_project_id_gin', table_name='project', postgresql_using='gin')
    op.drop_index(op.f('ix_project_project_id'), table_name='project')
    op.drop_index('ix_project_name_gin', table_name='project', postgresql_using='gin')
    op.drop_table('project')
    op.drop_index(op.f('ix_file_id'), table_name='file')
    op.drop_table('file')
    op.drop_index(op.f('ix_clip_id'), table_name='clip')
    op.drop_table('clip')
    # ### end Alembic commands ###
